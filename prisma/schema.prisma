// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    workspaces    Workspace[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Workspace {
    id String @id @default(cuid())
    name String
    ownerId String
    owner User @relation(fields: [ownerId], references: [id])
    trades Trade[]

    @@index([ownerId])
    @@index([name])
}

model Trade {
    id String @id @default(cuid())
    symbolId String
    symbol Symbol @relation(fields: [symbolId], references: [id])
    side Side @default(BUY)
    open_price Decimal @db.Decimal(10,2)
    close_price Decimal @db.Decimal(10,2)
    begin_at DateTime?
    end_at DateTime?
    workspaceId String
    workspace Workspace @relation(fields: [workspaceId], references: [id])

    @@index([workspaceId])
    @@index([symbolId])
}

model Symbol {
  id String @id @default(cuid())
  name String
  description String
  trades Trade[]
}

enum Side {
    BUY
    SELL
}